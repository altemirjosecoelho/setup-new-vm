pipeline {
    agent {
        label 'jenkins-testes'
    }
    
    // Variáveis de ambiente devem ser configuradas no Jenkins:
    // TRAEFIK_SUBDOMAIN=traefik
    // DEFAULT_DOMAIN=exemplo.com
    // PORTAINER_SUBDOMAIN=portainer
    // TRAEFIK_NETWORK=traefik_network
    // ADMIN_PASSWORD=MinhaSenhaSegura123
    // REPO_SETUP_NEW_VM=https://github.com/altemirjosecoelho/setup-new-vm
    
    stages {
        stage('Verificar Variáveis de Ambiente') {
            steps {
                script {
                    echo "=== VERIFICANDO VARIÁVEIS DE AMBIENTE ==="
                    
                    // Verifica se as variáveis obrigatórias estão definidas
                    def requiredVars = ['TRAEFIK_SUBDOMAIN', 'DEFAULT_DOMAIN', 'PORTAINER_SUBDOMAIN', 'ADMIN_PASSWORD']
                    def missingVars = []
                    
                    requiredVars.each { var ->
                        if (!env[var]) {
                            missingVars.add(var)
                        } else {
                            if (var == 'ADMIN_PASSWORD') {
                                echo "✅ ${var}: [CONFIGURADA]"
                            } else {
                                echo "✅ ${var}: ${env[var]}"
                            }
                        }
                    }
                    
                    if (missingVars.size() > 0) {
                        error "❌ Variáveis obrigatórias não configuradas: ${missingVars.join(', ')}"
                    }
                    
                    // Define a network padrão se não estiver configurada
                    if (!env.TRAEFIK_NETWORK) {
                        env.TRAEFIK_NETWORK = 'traefik_network'
                        echo "ℹ️  TRAEFIK_NETWORK não configurada, usando padrão: ${env.TRAEFIK_NETWORK}"
                    } else {
                        echo "✅ TRAEFIK_NETWORK: ${env.TRAEFIK_NETWORK}"
                    }
                    
                    // Exibe as URLs que serão configuradas
                    echo ""
                    echo "=== URLs que serão configuradas ==="
                    echo "🌐 Traefik: https://${env.TRAEFIK_SUBDOMAIN}.${env.DEFAULT_DOMAIN}"
                    echo "🐳 Portainer: https://${env.PORTAINER_SUBDOMAIN}.${env.DEFAULT_DOMAIN}"
                    echo "🌐 Network: ${env.TRAEFIK_NETWORK}"
                    echo "====================================="
                }
            }
        }
        
        stage('Verificar Repositório e Executar Docker Compose') {
            steps {
                script {
                    echo "Verificando repositório e executando Docker Compose..."
                    
                    // Verifica se estamos no workspace correto
                    sh '''
                        echo "📁 Workspace atual: $(pwd)"
                        echo "=== ESTRUTURA DO WORKSPACE ==="
                        ls -la
                        echo "================================"
                    '''
                    
                    // Verifica se a pasta docker existe
                    sh '''
                        if [ -d "docker" ]; then
                            echo "✅ Pasta docker encontrada!"
                            cd docker
                            echo "📁 Acessando pasta: $(pwd)"
                            echo "=== CONTEÚDO DA PASTA DOCKER ==="
                            ls -la
                            echo "================================"
                        else
                            echo "❌ Pasta docker não encontrada!"
                            echo "Criando pasta docker..."
                            mkdir -p docker
                            cd docker
                            echo "✅ Pasta docker criada!"
                        fi
                    '''
                    
                    echo "🚀 Executando docker compose up traefik..."
                    sh '''
                        cd docker
                        docker compose -f docker-compose.traefik.yml --env-file .env up -d
                    '''
                    
                    echo "🚀 Executando docker compose up portainer..."
                    sh '''
                        cd docker
                        docker compose -f docker-compose.portainer.yml --env-file .env up -d
                    '''
                    
                    echo "✅ Docker Compose executado com sucesso!"
                    
                    // Verifica status dos containers
                    sh '''
                        echo "=== STATUS DOS CONTAINERS ==="
                        docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
                        echo "============================="
                    '''
                }
            }
        }
        
        stage('Criar Network Docker') {
            steps {
                script {
                    echo "Criando network Docker para Traefik..."
                    
                    // Verifica se a network já existe
                    def networkExists = sh(
                        script: "docker network ls --format '{{.Name}}' | grep -w '${env.TRAEFIK_NETWORK}'",
                        returnStatus: true
                    ) == 0
                    
                    if (!networkExists) {
                        sh "docker network create ${env.TRAEFIK_NETWORK}"
                        echo "✅ Network ${env.TRAEFIK_NETWORK} criada com sucesso!"
                    } else {
                        echo "ℹ️  Network ${env.TRAEFIK_NETWORK} já existe!"
                    }
                }
            }
        }
        
        stage('Verificar e Configurar Docker Compose') {
            steps {
                script {
                    echo "Verificando arquivos Docker Compose existentes..."
                    
                    // Gera hash da senha para o Traefik
                    def passwordHash = sh(
                        script: "htpasswd -nbB admin '${env.ADMIN_PASSWORD}' | cut -d ':' -f 2",
                        returnStdout: true
                    ).trim()
                    
                    // Cria arquivo .env com as variáveis
                    sh """
                        cd docker
                        cat > .env << 'EOF'
TRAEFIK_SUBDOMAIN=${env.TRAEFIK_SUBDOMAIN}
DEFAULT_DOMAIN=${env.DEFAULT_DOMAIN}
PORTAINER_SUBDOMAIN=${env.PORTAINER_SUBDOMAIN}
ADMIN_PASSWORD_HASH=${passwordHash}
TRAEFIK_NETWORK=${env.TRAEFIK_NETWORK}
DEFAULT_EMAIL=${env.DEFAULT_EMAIL ?: 'admin@' + env.DEFAULT_DOMAIN}
EOF
                    """
                    
                    echo "✅ Arquivo .env criado com as variáveis de ambiente!"
                    
                    // Lista todos os arquivos docker-compose existentes
                    sh '''
                        cd docker
                        echo "=== ARQUIVOS DOCKER COMPOSE ENCONTRADOS ==="
                        ls -la docker-compose*.yml
                        echo "=========================================="
                        
                        echo "=== CONTEÚDO DO DOCKER-COMPOSE.TRAEFIK.YML ==="
                        if [ -f docker-compose.traefik.yml ]; then
                            cat docker-compose.traefik.yml
                        else
                            echo "❌ docker-compose.traefik.yml não encontrado!"
                        fi
                        echo "============================================="
                        
                        echo "=== CONTEÚDO DO DOCKER-COMPOSE.PORTAINER.YML ==="
                        if [ -f docker-compose.portainer.yml ]; then
                            cat docker-compose.portainer.yml
                        else
                            echo "❌ docker-compose.portainer.yml não encontrado!"
                        fi
                        echo "==============================================="
                    '''
                    
                    // Exibe o conteúdo do arquivo .env
                    sh '''
                        echo "=== CONTEÚDO DO ARQUIVO .ENV ==="
                        cat .env
                        echo "================================"
                    '''
                    
                    // Cria diretórios necessários se não existirem
                    sh '''
                        cd docker
                        mkdir -p traefik/config traefik/certificates portainer/data
                        echo "✅ Diretórios criados/verificados!"
                    '''
                }
            }
        }
        
        stage('Verificar Status dos Containers') {
            steps {
                script {
                    echo "Verificando status dos containers..."
                    
                    sh '''
                        echo "=== STATUS DOS CONTAINERS ==="
                        docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
                        echo ""
                        echo "=== LOGS DO TRAEFIK ==="
                        docker logs --tail 10 traefik
                        echo ""
                        echo "=== LOGS DO PORTAINER ==="
                        docker logs --tail 10 portainer
                        echo ""
                        echo "=== NETWORKS ==="
                        docker network ls
                        echo ""
                        echo "=== VOLUMES ==="
                        docker volume ls
                    '''
                }
            }
        }
    }
    
    post {
        always {
            script {
                echo "Pipeline de configuração do Traefik e Portainer concluído!"
            }
        }
        success {
            script {
                echo "✅ Traefik e Portainer configurados com sucesso!"
                echo ""
                echo "=== RESUMO DA CONFIGURAÇÃO ==="
                echo "🌐 Traefik Dashboard: https://${env.TRAEFIK_SUBDOMAIN}.${env.DEFAULT_DOMAIN}"
                echo "👤 Usuário Traefik: admin"
                echo "🔑 Senha Traefik: [configurada via ADMIN_PASSWORD]"
                echo ""
                echo "🐳 Portainer Dashboard: https://${env.PORTAINER_SUBDOMAIN}.${env.DEFAULT_DOMAIN}"
                echo "🌐 Network: ${env.TRAEFIK_NETWORK}"
                echo "================================"
            }
        }
        failure {
            script {
                echo "❌ Erro durante a configuração do Traefik e Portainer!"
                echo "Verifique os logs acima para mais detalhes."
            }
        }
    }
} 