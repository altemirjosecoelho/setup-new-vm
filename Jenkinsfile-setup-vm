pipeline {
    agent {
        label 'local-agent'
    }
    
    environment {
        // Configurações de conexão SSH
        VM_HOST = '135.181.24.29'
        VM_USER = 'root'
        VM_PASSWORD = 'zx100mil!'
        
        // Configurações de instalação
        NODE_VERSION = '21.x'
        DOCKER_VERSION = 'latest'
        POSTGRES_VERSION = '15'
        REDIS_VERSION = '7'
        MONGODB_VERSION = '7'
        TRAEFIK_VERSION = 'latest'
        PORTAINER_VERSION = 'latest'
        PGADMIN_VERSION = 'latest'
    }
    
    stages {
        stage('Configurar Credenciais') {
            steps {
                script {
                    // Configurações de conexão SSH
                    env.VM_HOST = env.VM_HOST ?: '135.181.24.29'
                    env.VM_USER = env.VM_USER ?: 'root'
                    env.VM_PASSWORD = env.VM_PASSWORD ?: 'zx100mil!'
                    
                    echo '🔐 Credenciais configuradas'
                    echo "🖥️  VM: ${env.VM_HOST}"
                    echo "👤 Usuário: ${env.VM_USER}"
                }
            }
        }
        
        stage('Teste Mínimo com SSH Agent') {
            steps {
                script {
                    echo '🧪 Testando conexão SSH com SSH Agent...'
                    
                    // Usar SSH Agent para conectar
                    sshagent(['jenkins-ssh-key']) {
                        sh '''
                            # Testar conexão SSH
                            ssh -o StrictHostKeyChecking=no "${VM_USER}@${VM_HOST}" '
                                echo "✅ Conexão SSH estabelecida!"
                                echo "🖥️  Sistema: $(uname -a)"
                                echo "📦 Executando apt update..."
                                apt update
                                echo "📦 Executando apt upgrade -y..."
                                apt upgrade -y
                                echo "🎉 Teste mínimo concluído com sucesso!"
                            '
                        '''
                    }
                }
            }
        }
        
        stage('Teste Alternativo com Senha') {
            when {
                expression {
                    return false // Desabilitado por padrão, habilite se necessário
                }
            }
            steps {
                script {
                    echo '🔑 Testando com autenticação por senha...'
                    
                    // Usar expect para autenticação por senha
                    sh '''
                        # Verificar se expect está disponível
                        if ! command -v expect &> /dev/null; then
                            echo "📦 Instalando expect..."
                            sudo apt-get update
                            sudo apt-get install -y expect
                        fi
                        
                        # Criar script expect
                        cat > /tmp/ssh_test.exp << "EOF"
                        #!/usr/bin/expect -f
                        set timeout 30
                        spawn ssh -o StrictHostKeyChecking=no ${VM_USER}@${VM_HOST}
                        expect "password:"
                        send "${VM_PASSWORD}\r"
                        expect "$ "
                        send "echo '✅ Conexão SSH estabelecida!'\r"
                        send "echo '🖥️  Sistema:' \$(uname -a)\r"
                        send "echo '📦 Executando apt update...'\r"
                        send "apt update\r"
                        send "echo '📦 Executando apt upgrade -y...'\r"
                        send "apt upgrade -y\r"
                        send "echo '🎉 Teste mínimo concluído com sucesso!'\r"
                        send "exit\r"
                        expect eof
                        EOF
                        
                        chmod +x /tmp/ssh_test.exp
                        /tmp/ssh_test.exp
                        rm -f /tmp/ssh_test.exp
                    '''
                }
            }
        }
    }
    
    post {
        always {
            echo '🏁 Setup da VM finalizado!'
        }
        success {
            echo '🎉 Setup da VM realizado com sucesso!'
        }
        failure {
            echo '❌ Setup da VM falhou!'
            echo '🔍 Verifique os logs para identificar o problema'
            echo '💡 Dicas:'
            echo '   1. Configure as credenciais SSH no Jenkins'
            echo '   2. Verifique se a VM está acessível'
            echo '   3. Use o stage alternativo com senha se necessário'
        }
    }
} 